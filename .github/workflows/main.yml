name: CI

on:
  push:
    branches:
    - '**'
    tags:
    - '**'
  pull_request:
    branches:
    - '**'

# jobs:
  # build1:
  #   runs-on: ubuntu-18.04
  #   strategy:
  #     matrix:
  #       BASE_IMAGE_REPO: [alpine]
  #       BASE_IMAGE_TAG: [3.8, 3.9]
  #       BUILD_IMAGE_VARIANT: [curl, curl-iptables, git, git-ssh, iptables]
  #       include:
  #         - BASE_IMAGE_TAG: 3.8
  #           DEFAULT: true
  #         - BASE_IMAGE_TAG: 3.8
  #           BUILD_IMAGE_VARIANT: git-ssh
  #           LATEST: true
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: Display system info (ubuntu)
  #     run: |
  #       hostname
  #       whoami
  #       cat /etc/*release
  #       lscpu
  #       free
  #       df -h
  #       pwd
  #       docker info
  #       docker version
  #   - name: Login to docker registry
  #     run: echo "${DOCKERHUB_REGISTRY_PASSWORD}" | docker login -u "${DOCKERHUB_REGISTRY_USER}" --password-stdin
  #     env:
  #       DOCKERHUB_REGISTRY_USER: ${{ secrets.DOCKERHUB_REGISTRY_USER }}
  #       DOCKERHUB_REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_REGISTRY_PASSWORD }}
  #   - name: Build image
  #     run: |
  #       echo "BASE_IMAGE_REPO: $BASE_IMAGE_REPO"
  #       echo "BASE_IMAGE_TAG: $BASE_IMAGE_TAG"
  #       BASE_IMAGE="${BASE_IMAGE_REPO}:${BASE_IMAGE_TAG}"
  #       echo "BASE_IMAGE: $BASE_IMAGE"

  #       echo "BUILD_IMAGE_REPO: $BUILD_IMAGE_REPO"
  #       echo "BUILD_IMAGE_VARIANT: $BUILD_IMAGE_VARIANT"
  #       echo "DEFAULT: $DEFAULT"
  #       echo "LATEST: $LATEST"
  #       BUILD_IMAGE="${BUILD_IMAGE_REPO}:${BUILD_IMAGE_VARIANT}"
  #       echo "BUILD_IMAGE: $BUILD_IMAGE"

  #       time docker pull "$BUILD_IMAGE" || true
  #       time docker build \
  #         -t "$BUILD_IMAGE" \
  #         --cache-from "$BUILD_IMAGE" \
  #         --build-arg BASE_IMAGE="${BASE_IMAGE}" \
  #         "$BUILD_CONTEXT"
  #       if [ "${DEFAULT}" = 'true' ]; then
  #         docker tag "$BUILD_IMAGE" "${BUILD_IMAGE_REPO}:${BUILD_IMAGE_VARIANT}";
  #       fi
  #       if [ "${LATEST}" = 'true' ]; then
  #         docker tag "$BUILD_IMAGE" "${BUILD_IMAGE_REPO}:latest";
  #       fi
  #       docker inspect "$BUILD_IMAGE"
  #       docker images
  #     env:
  #       BASE_IMAGE_REPO: ${{ matrix.BASE_IMAGE_REPO }}
  #       BASE_IMAGE_TAG: ${{ matrix.BASE_IMAGE_TAG }}
  #       BUILD_IMAGE_REPO: myexampleuser/example1
  #       BUILD_IMAGE_VARIANT: ${{ matrix.BUILD_IMAGE_VARIANT }}
  #       BUILD_CONTEXT: variants/${{ matrix.BUILD_IMAGE_VARIANT }}
  #       DEFAULT: ${{ matrix.DEFAULT }}
  #       LATEST: ${{ matrix.LATEST }}
  #   - name: Clean-up
  #     run: docker logout
  #     if: always()

jobs:
  alpine:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        PS_VERSION: [6.2.0, 6.1.3, 6.1.0]
        OS: [alpine]
        OS_VARIANT: [3.8]
        TOOL_VARIANT: [git, git-ssh, git-sudo]
        include:
        - PS_VERSION: 6.2.0
          OS: alpine
          OS_VARIANT: 3.8
          TAG_PS_OS_TOOL: true
        - PS_VERSION: 6.2.0
          OS: alpine
          OS_VARIANT: 3.8
          TOOL_VARIANT: git-ssh
          TAG_TOOL_OS: true
          TAG_TOOL: true
    env:
      IMAGE_NAME: powershell
      PS_VERSION: ${{ matrix.PS_VERSION }}
      OS: ${{ matrix.OS }}
      OS_VARIANT: ${{ matrix.OS_VARIANT }}
      TOOL_VARIANT: ${{ matrix.TOOL_VARIANT }}
      TAG_PS_OS_TOOL: ${{ matrix.TAG_PS_OS_TOOL }}
      TAG_TOOL_OS: ${{ matrix.TAG_TOOL_OS }}
      TAG_TOOL: ${{ matrix.TAG_TOOL }}
      TAG_LATEST: ${{ matrix.TAG_LATEST }}
      BASE_REGISTRY_NAMESPACE: mcr.microsoft.com
      BASE_TAG_FULL: ${{ matrix.PS_VERSION }}-${{ matrix.OS }}-${{ matrix.OS_VARIANT }}
      BUILD_REGISTRY_NAMESPACE: joeltimothyoh
      BUILD_TAG_FULL: ${{ matrix.PS_VERSION }}-${{ matrix.OS }}-${{ matrix.OS_VARIANT }}-${{ matrix.TOOL_VARIANT }}
      BUILD_CONTEXT: variants/${{ matrix.OS }}/${{ matrix.TOOL_VARIANT }}
    steps:
    - uses: actions/checkout@v1
    - name: Display system info (linux)
      run: |
        hostname
        whoami
        cat /etc/*release
        lscpu
        free
        df -h
        pwd
        docker info
        docker version
    - name: Login to docker registry
      run: echo "${DOCKERHUB_REGISTRY_PASSWORD}" | docker login -u "${DOCKERHUB_REGISTRY_USER}" --password-stdin
      env:
        DOCKERHUB_REGISTRY_USER: joeltimothyoh
        DOCKERHUB_REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_REGISTRY_PASSWORD }}
    - name: Build image
      run: |
        echo "IMAGE_NAME: $IMAGE_NAME"
        echo "PS_VERSION: $PS_VERSION"
        echo "OS: $OS"
        echo "OS_VARIANT: $OS_VARIANT"
        echo "TOOL_VARIANT: $TOOL_VARIANT"
        echo "TAG_PS_OS_TOOL: $TAG_PS_OS_TOOL"
        echo "TAG_TOOL_OS: $TAG_TOOL_OS"
        echo "TAG_TOOL: $TAG_TOOL"
        echo "TAG_LATEST: $TAG_LATEST"
        echo "BASE_REGISTRY_NAMESPACE: $BASE_REGISTRY_NAMESPACE"
        echo "BASE_TAG_FULL: $BASE_TAG_FULL"
        echo "BUILD_REGISTRY_NAMESPACE: $BUILD_REGISTRY_NAMESPACE"
        echo "BUILD_TAG_FULL: $BUILD_TAG_FULL"
        echo "BUILD_CONTEXT: $BUILD_CONTEXT"
        echo "BASE_IMAGE: ${BASE_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BASE_TAG_FULL}"
        echo "BUILD_IMAGE: ${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}"
        time docker pull "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}" || true
        time docker build \
            --cache-from "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}" \
            -t "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}" \
            --build-arg BASE_IMAGE="${BASE_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BASE_TAG_FULL}" \
            "$BUILD_CONTEXT"
        if [ "${TAG_PS_OS_TOOL}" = 'true' ]; then
          docker tag "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}" "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${PS_VERSION}-${OS}-${TOOL_VARIANT}";
        fi
        if [ "${TAG_TOOL_OS}" = 'true' ]; then
          docker tag "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}" "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${TOOL_VARIANT}-${OS}";
        fi
        if [ "${TAG_TOOL}" = 'true' ]; then
          docker tag "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}" "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${TOOL_VARIANT}";
        fi
        if [ "${TAG_LATEST}" = 'true' ]; then
          docker tag "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}" "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:latest";
        fi
        docker inspect "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}"
        docker images
    - name: Push image
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo Pushing image "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}"
    - name: Clean-up
      run: docker logout
      if: always()
  ubuntu:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        PS_VERSION: [6.2.0, 6.1.3, 6.1.0]
        OS: [ubuntu]
        OS_VARIANT: [18.04]
        TOOL_VARIANT: [git, git-ssh, git-sudo]
        include:
        - PS_VERSION: 6.2.0
          OS: ubuntu
          OS_VARIANT: 18.04
          TAG_PS_OS_TOOL: true
        - PS_VERSION: 6.2.0
          OS: ubuntu
          OS_VARIANT: 18.04
          TOOL_VARIANT: git
          TAG_TOOL_OS: true
          TAG_TOOL: true
          TAG_LATEST: true
    env:
      IMAGE_NAME: powershell
      PS_VERSION: ${{ matrix.PS_VERSION }}
      OS: ${{ matrix.OS }}
      OS_VARIANT: ${{ matrix.OS_VARIANT }}
      TOOL_VARIANT: ${{ matrix.TOOL_VARIANT }}
      TAG_PS_OS_TOOL: ${{ matrix.TAG_PS_OS_TOOL }}
      TAG_TOOL_OS: ${{ matrix.TAG_TOOL_OS }}
      TAG_TOOL: ${{ matrix.TAG_TOOL }}
      TAG_LATEST: ${{ matrix.TAG_LATEST }}
      BASE_REGISTRY_NAMESPACE: mcr.microsoft.com
      BASE_TAG_FULL: ${{ matrix.PS_VERSION }}-${{ matrix.OS }}-${{ matrix.OS_VARIANT }}
      BUILD_REGISTRY_NAMESPACE: joeltimothyoh
      BUILD_TAG_FULL: ${{ matrix.PS_VERSION }}-${{ matrix.OS }}-${{ matrix.OS_VARIANT }}-${{ matrix.TOOL_VARIANT }}
      BUILD_CONTEXT: variants/${{ matrix.OS }}/${{ matrix.TOOL_VARIANT }}
    steps:
    - uses: actions/checkout@v1
    - name: Display system info (linux)
      run: |
        hostname
        whoami
        cat /etc/*release
        lscpu
        free
        df -h
        pwd
        docker info
        docker version
    - name: Login to docker registry
      run: echo "${DOCKERHUB_REGISTRY_PASSWORD}" | docker login -u "${DOCKERHUB_REGISTRY_USER}" --password-stdin
      env:
        DOCKERHUB_REGISTRY_USER: joeltimothyoh
        DOCKERHUB_REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_REGISTRY_PASSWORD }}
    - name: Build image
      run: |
        echo "IMAGE_NAME: $IMAGE_NAME"
        echo "PS_VERSION: $PS_VERSION"
        echo "OS: $OS"
        echo "OS_VARIANT: $OS_VARIANT"
        echo "TOOL_VARIANT: $TOOL_VARIANT"
        echo "TAG_PS_OS_TOOL: $TAG_PS_OS_TOOL"
        echo "TAG_TOOL_OS: $TAG_TOOL_OS"
        echo "TAG_TOOL: $TAG_TOOL"
        echo "TAG_LATEST: $TAG_LATEST"
        echo "BASE_REGISTRY_NAMESPACE: $BASE_REGISTRY_NAMESPACE"
        echo "BASE_TAG_FULL: $BASE_TAG_FULL"
        echo "BUILD_REGISTRY_NAMESPACE: $BUILD_REGISTRY_NAMESPACE"
        echo "BUILD_TAG_FULL: $BUILD_TAG_FULL"
        echo "BUILD_CONTEXT: $BUILD_CONTEXT"
        echo "BASE_IMAGE: ${BASE_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BASE_TAG_FULL}"
        echo "BUILD_IMAGE: ${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}"
        time docker pull "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}" || true
        time docker build \
            --cache-from "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}" \
            -t "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}" \
            --build-arg BASE_IMAGE="${BASE_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BASE_TAG_FULL}" \
            "$BUILD_CONTEXT"
        if [ "${TAG_PS_OS_TOOL}" = 'true' ]; then
          docker tag "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}" "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${PS_VERSION}-${OS}-${TOOL_VARIANT}";
        fi
        if [ "${TAG_TOOL_OS}" = 'true' ]; then
          docker tag "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}" "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${TOOL_VARIANT}-${OS}";
        fi
        if [ "${TAG_TOOL}" = 'true' ]; then
          docker tag "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}" "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${TOOL_VARIANT}";
        fi
        if [ "${TAG_LATEST}" = 'true' ]; then
          docker tag "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}" "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:latest";
        fi
        docker inspect "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${BUILD_TAG_FULL}"
        docker images
    - name: Push image
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo Pushing image "${BUILD_REGISTRY_NAMESPACE}/${IMAGE_NAME}"
    - name: Clean-up
      run: docker logout
      if: always()
